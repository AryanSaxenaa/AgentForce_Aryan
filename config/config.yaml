# Test Case Generator Bot Configuration

# AI Provider Configuration
ai:
  provider: "auto"  # openai, anthropic, auto, mock
  openai_model: "gpt-4"
  anthropic_model: "claude-3-sonnet-20240229"
  max_tokens: 1000
  temperature: 0.3
  timeout: 30

# Test Generation Settings
test_generation:
  coverage_threshold: 80.0
  max_test_cases_per_function: 5
  include_edge_cases: true
  include_integration_tests: true
  default_test_framework:
    python: "pytest"
    javascript: "jest"
    typescript: "jest"
    java: "junit"

# Output Configuration
output:
  output_format: "files"  # files, stdout, json
  test_file_prefix: "test_"
  test_directory: "tests"

# Language-Specific Settings
languages:
  python:
    test_framework: "pytest"
    file_extension: ".py"
    import_style: "from module import function"
    test_file_pattern: "test_*.py"
    setup_imports:
      - "import pytest"
      - "from unittest.mock import Mock, patch"
    assertion_style: "assert"
  
  javascript:
    test_framework: "jest"
    file_extension: ".js"
    import_style: "const { function } = require(\"module\")"
    test_file_pattern: "*.test.js"
    setup_imports:
      - "const { describe, test, expect, beforeEach, afterEach } = require(\"@jest/globals\")"
    assertion_style: "expect"
  
  typescript:
    test_framework: "jest"
    file_extension: ".ts"
    import_style: "import { function } from \"module\""
    test_file_pattern: "*.test.ts"
    setup_imports:
      - "import { describe, test, expect, beforeEach, afterEach } from \"@jest/globals\""
    assertion_style: "expect"
  
  java:
    test_framework: "junit"
    file_extension: ".java"
    import_style: "import package.Class"
    test_file_pattern: "*Test.java"
    setup_imports:
      - "import org.junit.Test"
      - "import static org.junit.Assert.*"
    assertion_style: "assert"

# CI/CD Integration
integration:
  github_integration: false
  auto_pr_comments: true
  coverage_check_enabled: true

# Code Analysis Settings
analysis:
  max_complexity_threshold: 10
  detect_performance_risks: true
  detect_security_issues: true
  supported_languages:
    - python
    - javascript
    - typescript
    - java

# Logging
logging:
  level: "INFO"
  file: "test_generator.log"
  console: true